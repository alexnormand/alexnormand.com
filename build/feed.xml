<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alex Normand - Adventures in HTML5, CSS3, JavaScript and the open Web</title>
    <atom:link href="http://localhost:8080/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://localhost:8080</link>
    <description>Alex Normand</description>
    <pubDate>Sun, 01 Apr 2012 19:00:00 +0200</pubDate>
    <generator>The mighty Wintersmith</generator>
    <language>en</language>
    <item>
      <title>Automatically Add Vendor Prefixes During Your Build Process</title>
      <link>http://localhost:8080/blog/2012/04/1-add-vendor-prefixes--build-process/</link>
      <pubDate>Sun, 01 Apr 2012 19:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://localhost:8080/blog/2012/04/1-add-vendor-prefixes--build-process/</guid>
      <author></author>
      <description>&lt;p&gt;Several months ago, the CSS working group discussed the issue of the &lt;strong&gt;-webkit&lt;/strong&gt; prefix monopoly and the fact
that developers usually don&apos;t bother adding other prefixes.
As a result, browser vendors considered using &lt;strong&gt;-webkit&lt;/strong&gt; as the only vendor prefix and thus
dropping their own prefixes (ie: -moz, -o, -ms,...).
This suggestion caused an uproar &lt;a href=&quot;http://lea.verou.me/2012/02/vendor-prefixes-the-css-wg-and-me/&quot;&gt;in&lt;/a&gt;
the &lt;a href=&quot;http://www.glazman.org/weblog/dotclear/index.php?post/2011/11/16/CSS-vendor-prefixes-an-answer-to-Henri-Sivonen&quot;&gt;web&lt;/a&gt; 
&lt;a href=&quot;http://remysharp.com/2012/02/09/vendor-prefixes-about-to-go-south/&quot;&gt;community&lt;/a&gt;.

&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;


&lt;/p&gt;
&lt;p&gt;Currently, the most popular and preferred method to automatically handle vendor prefixes effortlessly is to work with CSS preprocessors
like &lt;a href=&quot;http://sass-lang.com/&quot;&gt;SASS&lt;/a&gt;, &lt;a href=&quot;http://lesscss.org/&quot;&gt;LESS&lt;/a&gt; &amp; &lt;a href=&quot;http://learnboost.github.com/stylus/&quot;&gt;Stylus&lt;/a&gt;.
Yet many Developers don&apos;t bother using and/or learning these tools.
You should definitely consider using these tools as they will save you time and hassle.
Dealing with all &lt;a href=&quot;http://peter.sh/experiments/vendor-prefixed-css-property-overview/&quot;&gt;variants&lt;/a&gt; 
of implemented CSS3 properties by hand can be a time-consuming, error-prone and repetitve task.


&lt;/p&gt;
&lt;p&gt;In this post, I&apos;ll show you how you can easily and automatically add missing vendor prefixes in you css files
during your build process using &lt;a href=&quot;http://ant.apache.org/&quot;&gt;ant&lt;/a&gt; (or &lt;a href=&quot;http://www.gnu.org/software/make/manual/make.html&quot;&gt;make&lt;/a&gt;)
and &lt;a href=&quot;http://prefixr.com/&quot;&gt;prefixr&lt;/a&gt;.
This will ensure that all prefixes are automatically included in your builds.


&lt;/p&gt;
&lt;h2&gt;Our sample project&lt;/h2&gt;
&lt;p&gt;The sample project we&apos;ll be working with is available at 
&lt;a href=&quot;http://alexnormand.github.com/demos/2012/03/31/build/&quot;&gt;http://alexnormand.github.com/demos/2012/03/31/build/&lt;/a&gt;,
you can also check out the &lt;a href=&quot;https://github.com/alexnormand/demos/tree/gh-pages/2012/03/31&quot;&gt;source code&lt;/a&gt; if you wish.
This simple web page queries imdb using the &lt;a href=&quot;http://www.imdbapi.com/&quot;&gt;imdb api&lt;/a&gt; via a JSONP request.
The response is then simply printed on the web page. The CSS stylesheet uses several CSS3 properties such as
box-shadow, border-radius, gradients, transitions,...

&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://farm8.staticflickr.com/7077/6890313350_4b2b2932e6.jpg&quot; width=&quot;500&quot; height=&quot;217&quot; alt=&quot;alexnormand-demo-imdb-search-box-screenshot&quot;&gt;
&lt;img src=&quot;http://farm8.staticflickr.com/7085/6890313356_0e98c7ab0a.jpg&quot; width=&quot;486&quot; height=&quot;500&quot; alt=&quot;alexnormand-demo-imdb-display-result-screenshot&quot;&gt;


&lt;/p&gt;
&lt;p&gt;We&apos;ll use the &lt;a href=&quot;http://www.prefixr.com/api/usage/&quot;&gt;prefixr api&lt;/a&gt; on the command line to add any missing vendor-prefixed property:

&lt;/p&gt;
&lt;p&gt;{% syntax bash %}
$ curl -sSd css=&quot;$(cat path/to/style.css)&quot; &lt;a href=&quot;http://prefixr.com/api/index.php&quot;&gt;http://prefixr.com/api/index.php&lt;/a&gt; -o /path/to/output/style.css
{% endsyntax %}

&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;


&lt;/p&gt;
&lt;p&gt;Here&apos;s the simplified ant build file which passes the contents of the &lt;strong&gt;style.css&lt;/strong&gt; 
file to the css parameter and makes a POST request to &lt;strong&gt;&lt;a href=&quot;http://prefixr.com/api/index.php&quot;&gt;http://prefixr.com/api/index.php&lt;/a&gt;&lt;/strong&gt;

&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;    &lt;target&gt;
        &lt;!--Source CSS dir--&gt;
        &lt;property name=&lt;span class=&quot;string&quot;&gt;&quot;src.css.dir&quot;&lt;/span&gt; value=&lt;span class=&quot;string&quot;&gt;&quot;${basedir}/css&quot;&lt;/span&gt;/&gt;
        &lt;!-- Prefixr URL --&gt;
        &lt;property name=&lt;span class=&quot;string&quot;&gt;&quot;prefixr.url&quot;&lt;/span&gt; value=&lt;span class=&quot;string&quot;&gt;&quot;http://prefixr.com/api/index.php&quot;&lt;/span&gt; /&gt;
        &lt;!--Output dir--&gt;
        &lt;property name=&lt;span class=&quot;string&quot;&gt;&quot;build.dir&quot;&lt;/span&gt; value=&lt;span class=&quot;string&quot;&gt;&quot;../build&quot;&lt;/span&gt;/&gt;
    &lt;/target&gt;

    &lt;!-- Add missing vendor prefixes --&gt;
    &lt;target name=&lt;span class=&quot;string&quot;&gt;&quot;-prefixr&quot;&lt;/span&gt;
            description=&lt;span class=&quot;string&quot;&gt;&quot;Adds missing vendor prefixes to css files&quot;&lt;/span&gt; &gt;
      &lt;loadfile property=&lt;span class=&quot;string&quot;&gt;&quot;build.style.css&quot;&lt;/span&gt; srcFile=&lt;span class=&quot;string&quot;&gt;&quot;${src.css.dir}/style.css&quot;&lt;/span&gt; /&gt;
      &lt;exec executable=&lt;span class=&quot;string&quot;&gt;&quot;curl&quot;&lt;/span&gt; failonerror=&lt;span class=&quot;string&quot;&gt;&quot;true&quot;&lt;/span&gt; output=&lt;span class=&quot;string&quot;&gt;&quot;${build.dir}/css/style.css&quot;&lt;/span&gt;&gt;
         &lt;arg line=&lt;span class=&quot;string&quot;&gt;'-sSd css=&quot;${build.style.css}&quot;  ${prefixr.url}'&lt;/span&gt;/&gt;
      &lt;/exec&gt;
      &lt;&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt;&gt;Added missing vendor prefixes to stylesheets&lt;/&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt;&gt;
    &lt;/target&gt;
&lt;/project&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here&apos;s the makefile version:
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;makefile&quot;&gt;.PHONY = all, clean, copy, gen

SRC   = src
BUILD = build
BUILD.STYLE.CSS = $(BUILD)/css/style.css
TOOLS = ~/tools

HTMLCOMPRESSOR = $(TOOLS)/htmlcompressor-&lt;span class=&quot;number&quot;&gt;1.5&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;.jar
YUICOMPRESSOR  = $(TOOLS)/yuicompressor-&lt;span class=&quot;number&quot;&gt;2.4&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;.jar
PREFIXR        = http:&lt;span class=&quot;comment&quot;&gt;//prefixr.com/api/index.php&lt;/span&gt;

all :  clean gen

clean:
        rm -rf $(BUILD)

copy:
        mkdir -p $(BUILD)/css
        cp $(SRC)/css/style.css $(BUILD)/css

gen: copy
        java -jar $(HTMLCOMPRESSOR) -o $(BUILD)/index.html --compress-js --compress-css $(SRC)/index.html
        @curl -sSd css=&lt;span class=&quot;string&quot;&gt;&quot;$(shell cat $(BUILD.STYLE.CSS))&quot;&lt;/span&gt; $(PREFIXR) -o $(BUILD.STYLE.CSS)
        @&lt;span class=&quot;keyword&quot;&gt;echo&lt;/span&gt; Added Missing Vendor prefixes to stylesheets
        java -jar $(YUICOMPRESSOR) -o $(BUILD.STYLE.CSS) $(BUILD.STYLE.CSS)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The sample project uses &lt;a href=&quot;http://code.google.com/p/htmlcompressor/&quot;&gt;htmlcompressor&lt;/a&gt; for html minification, 
&lt;a href=&quot;http://prefixr.com/&quot;&gt;prefixr&lt;/a&gt; for automatic vendor prefix inclusion.
&lt;a href=&quot;http://developer.yahoo.com/yui/compressor/&quot;&gt;yuicompressor&lt;/a&gt; for css minification.
You can view source code at &lt;a href=&quot;https://github.com/alexnormand/demos/tree/gh-pages/2012/03/31&quot;&gt;https://github.com/alexnormand/demos/tree/gh-pages/2012/03/31&lt;/a&gt;


&lt;/p&gt;
&lt;h2&gt;Building the project&lt;/h2&gt;
&lt;p&gt;To build the project simply run
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ ant&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or 
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;$ make&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will generate a production release in the &lt;strong&gt;build&lt;/strong&gt; folder with all the vendor prefixes automatically added.
And that&apos;s it! You won&apos;t need to worry about prefixes anymore when releasing your projects.
You should never have to hand code vendor prefixes ever again, you should &lt;em&gt;always&lt;/em&gt; use tools to handle this tedious
task whether you choose to use CSS preprocessors, client-side solutions, or tools like prefixr.


&lt;/p&gt;
&lt;h2&gt;Further reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://paulirish.com/2012/vendor-prefixes-are-not-developer-friendly/&quot;&gt;http://paulirish.com/2012/vendor-prefixes-are-not-developer-friendly/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://css-tricks.com/tldr-on-vendor-prefix-drama/&quot;&gt;http://css-tricks.com/tldr-on-vendor-prefix-drama/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://christianheilmann.com/2012/02/09/now-vendor-prefixes-have-become-a-problem-want-to-help-fix-it/&quot;&gt;http://christianheilmann.com/2012/02/09/now-vendor-prefixes-have-become-a-problem-want-to-help-fix-it/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://infrequently.org/2012/02/misdirection/&quot;&gt;http://infrequently.org/2012/02/misdirection/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;An alternative to prefixr: &lt;a href=&quot;http://cssprefixer.appspot.com/&quot;&gt;cssprefixer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://css3please.com/&quot;&gt;css3please&lt;/a&gt; by Paul Irish&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://leaverou.github.com/prefixfree/&quot;&gt;prefixfree&lt;/a&gt; by Lea Verou&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://addyosmani.com/blog/client-side-build-process/&quot;&gt;http://addyosmani.com/blog/client-side-build-process/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Installing node.js on Debian stable/testing via aptitude</title>
      <link>http://localhost:8080/blog/2012/02/11-installing-nodejs-on-debian/</link>
      <pubDate>Sat, 11 Feb 2012 18:00:00 +0100</pubDate>
      <guid isPermaLink="true">http://localhost:8080/blog/2012/02/11-installing-nodejs-on-debian/</guid>
      <author></author>
      <description>&lt;p&gt;When Installing node.js on Debian you have two options:

&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Compiling it from &lt;a href=&quot;https://github.com/joyent/node&quot;&gt;source&lt;/a&gt; if you need the latest version of node.js&lt;/li&gt;
&lt;li&gt;Installing it the Debian Way using the &lt;a href=&quot;http://packages.debian.org/sid/nodejs&quot;&gt;node.js package&lt;/a&gt;
available in the official Debian Sid (unstable) repo.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post will describe how to install node.js from Debian&apos;s package manager.

&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;

&lt;/p&gt;
&lt;h2&gt;Step 1: Adding the repo to /etc/apt/sources.list&lt;/h2&gt;
&lt;p&gt;First of all, you need to add the Debian Sid (unstable) repo to your &lt;strong&gt;/etc/apt/sources.list&lt;/strong&gt; file:

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http:&lt;span class=&quot;comment&quot;&gt;//ftp.debian.org/debian/ unstable main contrib non-free&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Step 2: Setting aptitude&apos;s default Debian release in /etc/apt/apt.conf&lt;/h2&gt;
&lt;p&gt;Since &lt;a href=&quot;http://packages.debian.org/sid/nodejs&quot;&gt;node.js&lt;/a&gt; is the only package you 
want to install from the Debian Sid (unstable) repo, you must set aptitude&apos;s 
default release. This will prevent all of your packages from being updated to
the unstable version, and therefore prevent upgrading all of your system to Debian Sid (unstable).

&lt;/p&gt;
&lt;p&gt;Create a &lt;strong&gt;/etc/apt/apt.conf&lt;/strong&gt; file and add the following line :

&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you&apos;re using testing&lt;/em&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  APT:&lt;span class=&quot;keyword&quot;&gt;Default&lt;/span&gt;-Release &lt;span class=&quot;string&quot;&gt;&quot;testing&quot;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;If you&apos;re using stable&lt;/em&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  APT:&lt;span class=&quot;keyword&quot;&gt;Default&lt;/span&gt;-Release &lt;span class=&quot;string&quot;&gt;&quot;stable&quot;&lt;/span&gt;;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may want to read about &lt;a href=&quot;http://wiki.debian.org/AptPreferences&quot;&gt;apt-pinning&lt;/a&gt; if you want to have more fine grained control
over which packages you wish to install on your system.


&lt;/p&gt;
&lt;h2&gt;Step 3: Installing node.js from the package manager&lt;/h2&gt;
&lt;p&gt;Then install the package the way you usually do, the only difference is the &lt;strong&gt;-t&lt;/strong&gt; option
which sets the release from which the package should be installed.
&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ aptitude update
$ aptitude install -t unstable nodejs&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You may also want to install  &lt;a href=&quot;http://npmjs.org/&quot;&gt;npm&lt;/a&gt;. 
Although there is an available debian &lt;a href=&quot;http://packages.debian.org/sid/npm&quot;&gt;package&lt;/a&gt; in the Debian Sid repo, I recommend
installing it the &quot;official&quot; way:

&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ curl http:&lt;span class=&quot;comment&quot;&gt;//npmjs.org/install.sh | sh&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>first blog post</title>
      <link>http://localhost:8080/blog/2012/01/28-first-blog-post/</link>
      <pubDate>Sat, 28 Jan 2012 21:27:00 +0100</pubDate>
      <guid isPermaLink="true">http://localhost:8080/blog/2012/01/28-first-blog-post/</guid>
      <author></author>
      <description>&lt;p&gt;Is this working ?

&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;


&lt;/p&gt;
&lt;p&gt;elly danish ice cream gingerbread bear claw carrot cake. Wafer chocolate bar bear claw. Ice cream donut applicake bonbon tiramisu chupa chups. Muffin tart bonbon gummi bears pastry ice cream sweet chocolate bar. Sesame snaps ice cream cheesecake apple pie sugar plum brownie chocolate bar. Powder bonbon bonbon toffee tootsie roll chocolate bar. Faworki apple pie halvah. Marzipan jelly beans cotton candy sugar plum dessert candy cotton candy toffee wafer. Tart marzipan halvah chocolate cake ice cream marzipan wypas brownie. Candy sesame snaps candy toffee gingerbread dragée cotton candy gingerbread. Gingerbread gummies cotton candy brownie. Sesame snaps gingerbread lemon drops jujubes.


&lt;/p&gt;
&lt;p&gt;Chocolate wafer soufflé chupa chups candy canes. Donut biscuit marshmallow danish wypas. Fruitcake bear claw sesame snaps liquorice chocolate icing donut. Soufflé wafer caramels pudding. Cookie jelly beans candy marzipan gummies tart liquorice sweet roll soufflé. Fruitcake dragée jujubes soufflé pudding. Croissant pie carrot cake donut apple pie. Donut powder fruitcake soufflé cookie. Toffee pastry wypas bonbon jelly donut applicake. Chupa chups liquorice oat cake caramels. Sesame snaps powder donut. Sweet lemon drops sesame snaps. Liquorice cookie sesame snaps marshmallow liquorice soufflé.
Faworki liquorice marshmallow dessert chocolate biscuit. Sweet applicake topping sweet. Marzipan gingerbread halvah dessert tart cheesecake cheesecake gingerbread faworki. Marzipan liquorice cookie dragée jelly tiramisu applicake. Macaroon chocolate bar gingerbread lemon drops sweet roll. Danish lollipop croissant topping. Chocolate cake bear claw chocolate. Danish croissant applicake. Cotton candy wypas tiramisu. Biscuit tiramisu jujubes faworki dragée liquorice. Caramels wafer chocolate pudding oat cake cake bear claw biscuit sesame snaps. Chocolate bar pastry tootsie roll topping wafer pie biscuit. Bonbon jelly icing dessert oat cake gummies biscuit toffee.

&lt;/p&gt;
&lt;p&gt;Lollipop bear claw muffin gummies donut gummi bears. Apple pie bonbon dragée. Gingerbread sesame snaps biscuit sweet roll topping chupa chups. Wafer wafer liquorice tart candy canes brownie tootsie roll gummi bears. Apple pie sugar plum cupcake halvah faworki candy canes cheesecake. Gummi bears oat cake cotton candy halvah candy applicake sweet. Chocolate cake muffin chupa chups lollipop pudding dessert. Toffee gummies muffin dragée. Gummi bears cake candy canes faworki marshmallow topping applicake. Pastry muffin dessert cupcake donut brownie. Marshmallow sugar plum cupcake jelly beans cookie. Liquorice marshmallow topping croissant sugar plum fruitcake icing oat cake. Apple pie jujubes marshmallow.

&lt;/p&gt;
&lt;p&gt;Tootsie roll icing pastry sweet roll sweet croissant candy canes. Cupcake donut halvah brownie pudding. Sweet roll candy canes oat cake sugar plum pie. Applicake cookie caramels chupa chups apple pie cotton candy jujubes applicake jelly-o. Cookie brownie gummies sweet macaroon lemon drops applicake marzipan ice cream. Applicake lollipop fruitcake pie chocolate candy toffee. Chocolate wypas icing. Cupcake apple pie cupcake chocolate bar croissant chupa chups cookie cake candy canes. Chupa chups fruitcake soufflé powder. Gingerbread ice cream chocolate. Applicake lemon drops halvah jelly-o. Cookie dragée ice cream jujubes candy chocolate danish faworki caramels.
&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>